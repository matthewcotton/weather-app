{"version":3,"sources":["apiKeyOpenWeatherMap.js","WeatherApiClient.js","apiKeyGeo.js","GeoApiClient.js","weatherDataProcessing.js","DayHeading.js","TempCardInfo.js","WindCardInfo.js","DayCard.js","SevenDayCards.js","MyNav.js","Title.js","HourlyHeading.js","HourInfo.js","HourlyCard.js","FullDayCard.js","LocationBlock.js","App.js","reportWebVitals.js","index.js"],"names":["apiKeyOpenWeatherMap","WeatherApiClient","response","status","Promise","resolve","reject","Error","statusText","url","axios","get","then","this","catch","error","console","alert","lat","long","getRequest","apiKeyGeo","GeoApiClient","lon","placename","weatherDataProcessing","weatherData","days","months","today","Date","now","todayName","getDay","daily","slice","map","item","i","key","day","parseInt","dt","nameDay","monthDate","getMonth","getDate","icon","weather","description","toUpperCase","length","maxTemp","Math","round","temp","max","minTemp","min","windSpeed","wind_speed","windDirRot","String","wind_deg","hourlyWeather","start","end","hourly","j","hour","feelsLike","feels_like","windDeg","humidity","dewPoint","dew_point","DayHeading","props","Grid","container","xs","spacing","direction","alignItems","Typography","variant","gutterBottom","weatherInfo","justify","className","src","alt","TempCardInfo","WindCardInfo","style","transform","useStyles","makeStyles","theme","paper","padding","textAlign","color","palette","text","secondary","cursor","DayCard","classes","sm","md","lg","xl","onClick","e","preventDefault","onDayClick","Paper","elevation","root","flexGrow","NewWeatherCard","MyNav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Text","href","React","Component","Title","Box","loadingStatus","exit","HourlyHeading","onXClick","HourInfo","hourWeather","HourlyCard","FullDayCard","form","margin","width","LocationBlock","useState","setPlacename","noValidate","autoComplete","onSubmit","trim","onsubmit","TextField","label","type","value","onChange","target","Button","locationData","formatted","App","state","loading","selectedDay","undefined","visibilityDays","visibilityHours","bind","weatherApiClient","geoApiClient","toastr","options","closeButton","positionClass","timeOut","extendedTimeOut","showEasing","clear","setState","getGeoFwd","data","results","updateLocation","finally","fetchWeather","geometry","lng","getWeather","updateWeather","searchLocation","SevenDayCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50698c63.chunk.js","sourcesContent":["function apiKeyOpenWeatherMap() {\r\n  return \"0a946960ed9c8a758bd296209b592532\";\r\n}\r\n\r\nexport default apiKeyOpenWeatherMap;","import axios from \"axios\";\r\nimport apiKeyOpenWeatherMap from \"./apiKeyOpenWeatherMap\";\r\n\r\nexport class WeatherApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getWeather(lat, long) {\r\n    let exclude = \"current,minutely,alerts\";\r\n    return this.getRequest(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=${exclude}&units=metric&appid=${apiKeyOpenWeatherMap()}`\r\n    );\r\n  }\r\n}\r\n","function apiKeyGeo() {\r\n  return \"3234ac1ece074372ae5030d3e2fdc5ee\";\r\n}\r\n\r\nexport default apiKeyGeo;","import axios from \"axios\";\r\nimport apiKeyGeo from \"./apiKeyGeo\";\r\n\r\nexport class GeoApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getGeoRev(lat, lon) {\r\n    return this.getRequest(\r\n      `https://api.opencagedata.com/geocode/v1/json?q=${lat},${lon}&key=${apiKeyGeo()}`\r\n    );\r\n  }\r\n\r\n  getGeoFwd(placename) {\r\n    return this.getRequest(\r\n      `https://api.opencagedata.com/geocode/v1/json?q=${placename}&key=${apiKeyGeo()}`\r\n    );\r\n  }\r\n}\r\n","export function weatherDataProcessing(weatherData) {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"Febuary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const today = new Date(Date.now());\r\n  const todayName = days[today.getDay(today)];\r\n\r\n  let weatherInfo = weatherData.daily.slice(0, 7).map((item, i) => {\r\n    // Set key\r\n    const key = i;\r\n    // Calculate name of the day\r\n    const day = new Date(parseInt(item.dt) * 1000);\r\n    let nameDay = days[day.getDay(day)];\r\n    nameDay = nameDay === todayName ? \"Today\" : nameDay;\r\n    // Calculate name of the month and date\r\n    const month = months[day.getMonth(day)];\r\n    const date = day.getDate(day);\r\n    const monthDate = month + \" \" + date;\r\n    // Set icon link\r\n    const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`;\r\n    // Set description\r\n    const description =\r\n      item.weather[0].description[0].toUpperCase() +\r\n      item.weather[0].description.slice(1, item.weather[0].description.length);\r\n    // Set max and min temps\r\n    const maxTemp = Math.round(item.temp.max) + \"°C\";\r\n    const minTemp = Math.round(item.temp.min) + \"°C\";\r\n    // Set wind speed and wind direction\r\n    const windSpeed = Math.round(item.wind_speed * 10) / 10 + \"m/s\";\r\n    const windDirRot = String(\"rotate(\" + item.wind_deg + \"deg)\");\r\n\r\n    let hourlyWeather = [];\r\n    if (i < 2) {\r\n      const start = 0 + (i * 24);\r\n      const end = start + 24;\r\n      hourlyWeather = weatherData.hourly.slice(start, end).map((item, j) => {\r\n        const hour = j;\r\n        const temp = Math.round(item.temp) + \"°C\";\r\n        const feelsLike = Math.round(item.feels_like) + \"°C\";\r\n        const windSpeed = Math.round(item.wind_speed * 10) / 10 + \"m/s\";\r\n        const windDirRot = String(\"rotate(\" + item.wind_deg + \"deg)\");\r\n        const description =\r\n          item.weather[0].description[0].toUpperCase() +\r\n          item.weather[0].description.slice(\r\n            1,\r\n            item.weather[0].description.length\r\n          );\r\n        const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`;\r\n        return ({\r\n          hour,\r\n          temp,\r\n          feelsLike,\r\n          windSpeed,\r\n          windDirRot,\r\n          description,\r\n          icon,\r\n        });\r\n      });\r\n    }\r\n\r\n    return ({\r\n      key,\r\n      nameDay,\r\n      monthDate,\r\n      icon,\r\n      description,\r\n      maxTemp,\r\n      minTemp,\r\n      windSpeed,\r\n      windDeg: item.wind_deg + \"°\",\r\n      windDirRot,\r\n      humidity: item.humidity + \"%\",\r\n      dewPoint: item.dew_point + \"°C\",\r\n      hourlyWeather,\r\n    });\r\n  });\r\n\r\n  return weatherInfo;\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction DayHeading(props) {\r\n  return (\r\n    <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item xs>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                {props.weatherInfo.nameDay}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {props.weatherInfo.monthDate}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.weatherInfo.description}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container justify=\"flex-end\">\r\n            <Grid item xs={8}>\r\n              <img\r\n                className=\"weather-icon\"\r\n                src={props.weatherInfo.icon}\r\n                alt={\"Icon for \" + props.weatherInfo.description}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n  )\r\n}\r\n\r\nexport default DayHeading;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction TempCardInfo(props) {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n        <Grid item xs>\r\n          Min Temp\r\n        </Grid>\r\n        <Grid item xs>\r\n          {props.weatherInfo.minTemp}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n        <Grid item xs>\r\n          Max Temp\r\n        </Grid>\r\n        <Grid item xs>\r\n          {props.weatherInfo.maxTemp}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TempCardInfo;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\n\r\n\r\nfunction WindCardInfo(props) {\r\n  return (\r\n    <Grid item xs={12} container>\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n        <Grid item xs>\r\n          Wind Speed\r\n        </Grid>\r\n        <Grid item xs>\r\n          {props.weatherInfo.windSpeed}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n        <Grid item xs>\r\n          Wind Direction\r\n        </Grid>\r\n        <Grid item xs>\r\n          N\r\n        </Grid>\r\n        <Grid item xs>\r\n          <NavigationIcon style={{ transform: props.weatherInfo.windDirRot }} />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default WindCardInfo;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DayHeading from \"./DayHeading\";\r\nimport TempCardInfo from \"./TempCardInfo\";\r\nimport WindCardInfo from \"./WindCardInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction DayCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={11}\r\n      sm={6}\r\n      md={4}\r\n      lg={3}\r\n      xl={2}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        props.onDayClick(props.weatherInfo.key);\r\n      }}\r\n    >\r\n      <Paper className={classes.paper} elevation={5}>\r\n        <DayHeading weatherInfo={props.weatherInfo} />\r\n        <TempCardInfo weatherInfo={props.weatherInfo} />\r\n        <WindCardInfo weatherInfo={props.weatherInfo} />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DayCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DayCard from \"./DayCard\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction NewWeatherCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {props.weatherInfo.map((day) => (\r\n          <DayCard key={day.key} weatherInfo={day} onDayClick={props.onDayClick} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWeatherCard;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand>Weather App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            </Nav>\r\n            <Nav>\r\n            <Navbar.Text className=\"nav-link\">\r\n                <a href='https://www.matthewcotton.dev/#/projects'>Back to Portfolio</a>\r\n              </Navbar.Text>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Title(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box className={classes.paper}>\r\n          <Typography variant=\"h3\">7 Day Weather Forecast</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box className={classes.paper}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            {props.loadingStatus}\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  exit: {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction HourlyHeading(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        xs={11}\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {props.weatherInfo.nameDay}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            {props.weatherInfo.monthDate}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Typography variant=\"body1\" gutterBottom>\r\n            {props.weatherInfo.description}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={1}\r\n        container\r\n        justify=\"flex-end\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          props.onXClick();\r\n        }}\r\n      >\r\n        <CloseIcon className={classes.exit} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HourlyHeading;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction hour(hour) {\r\n  return hour === 0 ? \"Now\" : \"+\" + hour + \"hr\";\r\n}\r\n\r\nfunction HourInfo(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      {props.hourWeather && (\r\n        <Paper className={classes.paper} elevation={2}>\r\n          <Grid container>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              spacing={0}\r\n              direction=\"column\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Grid item xs>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {hour(props.hourWeather.hour)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  {props.hourWeather.description}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  {props.hourWeather.temp}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} container justify=\"flex-end\">\r\n              <Grid item xs={8}>\r\n                <img\r\n                  className=\"weather-icon\"\r\n                  src={props.hourWeather.icon}\r\n                  alt={\"Icon for \" + props.hourWeather.description}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HourInfo;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HourInfo from \"./HourInfo\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction HourlyCard(props) {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {props.hourlyWeather.map((hour) => (\r\n        <HourInfo key={hour.hour} hourWeather={hour} />\r\n      ))}\r\n      {!props.hourlyWeather.length && (\r\n        \r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <br />\r\n          Hourly forecast only availble for 48 hours.\r\n        </Typography>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HourlyCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HourlyHeading from \"./HourlyHeading\";\r\nimport HourlyCard from \"./HourlyCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction FullDayCard(props) {\r\n  const classes = useStyles();\r\n\r\n  if (props.weatherInfo && props.weatherInfo.hourlyWeather) {\r\n    return (\r\n      <div className={classes.root} style={{ padding: 15 }}>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} elevation={5}>\r\n              <HourlyHeading\r\n                weatherInfo={props.weatherInfo}\r\n                onXClick={props.onXClick}\r\n              />\r\n              <HourlyCard hourlyWeather={props.weatherInfo.hourlyWeather} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default FullDayCard;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LocationBlock(props) {\r\n  const classes = useStyles();\r\n\r\n  const [placename, setPlacename] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (placename.trim()) {\r\n      props.onsubmit(placename);\r\n    }\r\n    setPlacename(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Box textAlign=\"center\">\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <TextField\r\n                id=\"location-search\"\r\n                label=\"Search\"\r\n                type=\"search\"\r\n                value={placename}\r\n                onChange={(e) => setPlacename(e.target.value)}\r\n              />\r\n              <Button variant=\"outlined\" type=\"submit\" value=\"Submit\">\r\n                Search\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.paper}>\r\n            {props.locationData.formatted\r\n              ? `${props.locationData.formatted}`\r\n              : \"\"}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBlock;\r\n","import React from \"react\";\nimport { WeatherApiClient } from \"./WeatherApiClient\";\nimport { GeoApiClient } from \"./GeoApiClient\";\nimport { weatherDataProcessing } from \"./weatherDataProcessing\";\nimport SevenDayCards from \"./SevenDayCards\";\nimport MyNav from \"./MyNav\";\nimport Title from \"./Title\";\nimport FullDayCard from \"./FullDayCard\";\nimport LocationBlock from \"./LocationBlock\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./App.css\";\nimport \"fontsource-roboto\";\nimport toastr from \"toastr\";\nimport \"toastr/build/toastr.min.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: [],\n      weatherInfo: [],\n      locationData: [],\n      loading: \"\",\n      placename: \"\",\n      selectedDay: undefined,\n      visibilityDays: true,\n      visibilityHours: false,\n    };\n    this.onDayClick = this.onDayClick.bind(this);\n    this.onXClick = this.onXClick.bind(this);\n    this.weatherApiClient = new WeatherApiClient();\n    this.geoApiClient = new GeoApiClient();\n    toastr.options = {\n      closeButton: true,\n      positionClass: \"toast-top-center\",\n      timeOut: \"3000\",\n      extendedTimeOut: \"1000\",\n      showEasing: \"swing\",\n    };\n    toastr.clear();\n  }\n\n  onDayClick(id) {\n    this.setState({\n      selectedDay: id,\n      visibilityDays: false,\n      visibilityHours: true,\n    });\n  }\n\n  onXClick() {\n    this.setState({\n      selectedDay: undefined,\n      visibilityDays: true,\n      visibilityHours: false,\n    });\n  }\n\n  searchLocation(placename) {\n    this.setState({\n      loading: \"loading...\",\n    });\n\n    this.geoApiClient\n      .getGeoFwd(placename)\n      .then((response) =>\n        response.data.results[0]\n          ? this.updateLocation(response.data.results[0])\n          : toastr.error(\n              `Location ${placename} could not be found`,\n              \"No Search Results\"\n            )\n      )\n      .finally(() => {\n        this.setState({\n          loading: \"\",\n        });\n      });\n  }\n\n  updateLocation(response) {\n    this.setState({\n      locationData: response,\n    });\n    this.fetchWeather(response.geometry.lat, response.geometry.lng);\n  }\n\n  fetchWeather(lat, long) {\n    this.weatherApiClient\n      .getWeather(lat, long)\n      .then((response) => this.updateWeather(response.data));\n  }\n\n  updateWeather(weatherData) {\n    this.setState({\n      weatherData,\n      weatherInfo: weatherDataProcessing(weatherData),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MyNav />\n        <br />\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Title loadingStatus={this.state.loading} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <LocationBlock\n              locationData={this.state.locationData}\n              onsubmit={(placename) => this.searchLocation(placename)}\n            />\n          </Grid>\n        </Grid>\n        {this.state.visibilityDays && (\n          <SevenDayCards\n            id=\"seven-day\"\n            weatherInfo={this.state.weatherInfo}\n            onDayClick={this.onDayClick}\n          />\n        )}\n        {this.state.visibilityHours && (\n          <FullDayCard\n            id=\"full-day\"\n            weatherInfo={this.state.weatherInfo[this.state.selectedDay]}\n            onXClick={this.onXClick}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}