{"version":3,"sources":["apiKeyOpenWeatherMap.js","WeatherApiClient.js","apiKeyGeo.js","GeoApiClient.js","NewCard.js","WeatherDataManipulation.js","SevenDayCards.js","MyNav.js","Title.js","LocationBlock.js","App.js","reportWebVitals.js","index.js"],"names":["apiKeyOpenWeatherMap","WeatherApiClient","response","status","Promise","resolve","reject","Error","statusText","url","axios","get","then","this","catch","error","console","alert","getRequest","apiKeyGeo","GeoApiClient","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","NewCard","props","classes","Grid","item","xs","sm","md","lg","xl","Paper","className","elevation","container","direction","alignItems","Typography","variant","gutterBottom","dayName","monthDate","detailedDesc","justify","src","icon","alt","minTemp","maxTemp","windSpeed","style","transform","windDir","WeatherDataManipulation","days","day","Date","parseInt","dateTime","today","now","nameDay","getDay","getMonth","getDate","description","toUpperCase","slice","length","Math","round","windDirRot","String","key","root","flexGrow","NewWeatherCard","weatherData","map","i","dt","weather","temp","max","min","wind_speed","wind_deg","MyNav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Text","href","React","Component","Title","Box","loadingStatus","LocationBlock","address","locationData","formatted","App","state","loading","fetching","location","weatherApiClient","geoApiClient","getGeoRev","updateLocation","data","results","setState","getWeather","updateWeather","daily","finally","fetchWeather","fetchLocation","log","SevenDayCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23fd42a6.chunk.js","sourcesContent":["function apiKeyOpenWeatherMap() {\r\n  return \"0a946960ed9c8a758bd296209b592532\";\r\n}\r\n\r\nexport default apiKeyOpenWeatherMap;","import axios from \"axios\";\r\nimport apiKeyOpenWeatherMap from \"./apiKeyOpenWeatherMap\";\r\n\r\nexport class WeatherApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getWeather() {\r\n    let lat = \"53.866291\";\r\n    let lon = \"-1.458470\";\r\n    let exclude = \"minutely,hourly,alerts\";\r\n    return this.getRequest(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${exclude}&units=metric&appid=${apiKeyOpenWeatherMap()}`\r\n    );\r\n  }\r\n}\r\n","function apiKeyGeo() {\r\n  return \"3234ac1ece074372ae5030d3e2fdc5ee\";\r\n}\r\n\r\nexport default apiKeyGeo;","import axios from \"axios\";\r\nimport apiKeyGeo from \"./apiKeyGeo\";\r\n\r\nexport class GeoApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getGeoRev() {\r\n    // Scarcroft\r\n    let lat = \"53.866291\";\r\n    let lon = \"-1.458470\";\r\n    // Meadowcroft\r\n    // let lat = \"52.97015220484259\";\r\n    // let lon = \"-2.69896787467237\";\r\n    return this.getRequest(\r\n      `https://api.opencagedata.com/geocode/v1/json?q=${lat},${lon}&key=${apiKeyGeo()}`\r\n    );\r\n  }\r\n\r\n  getGeoFwd() {}\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction NewCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={11} sm={6} md={4} lg={3} xl={2}>\r\n      <Paper className={classes.paper} elevation={5}>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item xs>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {props.dayName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {props.monthDate}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.detailedDesc}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container justify=\"center\">\r\n            <Grid item xs={8}>\r\n              <img\r\n                className=\"weather-icon\"\r\n                src={props.icon}\r\n                alt={\"Icon for \" + props.detailedDesc}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Min Temp\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.minTemp}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Max Temp\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.maxTemp}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} container>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Wind Speed\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.windSpeed}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Wind Direction\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"caption\" gutterBottom>\r\n                N\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <NavigationIcon style={{ transform: props.windDir }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NewCard;\r\n","import React from \"react\";\r\nimport NewCard from \"./NewCard\";\r\n\r\nfunction WeatherDataManipulation(props) {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const day = new Date(parseInt(props.dateTime) * 1000);\r\n  const today = new Date(Date.now());\r\n  let nameDay = days[day.getDay(day)];\r\n  const todayName = days[today.getDay(today)];\r\n  nameDay = nameDay === todayName ? \"Today\" : nameDay;\r\n  const months = [\r\n    \"January\",\r\n    \"Febuary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const month = months[day.getMonth(day)];\r\n  const date = day.getDate(day);\r\n  const monthDate = month + \" \" + date;\r\n  const icon = `http://openweathermap.org/img/wn/${props.icon}@2x.png`;\r\n  const description =\r\n    props.detailedDesc[0].toUpperCase() +\r\n    props.detailedDesc.slice(1, props.detailedDesc.length);\r\n  const maxTemp = Math.round(props.maxTemp) + \"°C\";\r\n  const minTemp = Math.round(props.minTemp) + \"°C\";\r\n  const windSpeed = Math.round(props.windSpeed * 10) / 10 + \"m/s\";\r\n  const windDirRot = String(\"rotate(\" + props.windDir + \"deg)\");\r\n\r\n  return (\r\n    <NewCard\r\n      key={props.key}\r\n      dayName={nameDay}\r\n      monthDate={monthDate}\r\n      icon={icon}\r\n      detailedDesc={description}\r\n      maxTemp={maxTemp}\r\n      minTemp={minTemp}\r\n      windSpeed={windSpeed}\r\n      windDir={windDirRot}\r\n    />\r\n  );\r\n}\r\n\r\nexport default WeatherDataManipulation;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport WeatherDataManipulation from \"./WeatherDataManipulation\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction NewWeatherCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {props.weatherData.slice(0, 7).map((day, i) => (\r\n          <WeatherDataManipulation\r\n            key={i}\r\n            dateTime={day.dt}\r\n            icon={day.weather[0].icon}\r\n            detailedDesc={day.weather[0].description}\r\n            maxTemp={day.temp.max}\r\n            minTemp={day.temp.min}\r\n            windSpeed={day.wind_speed}\r\n            windDir={day.wind_deg}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWeatherCard;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand>Weather App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            </Nav>\r\n            <Nav>\r\n            <Navbar.Text className=\"nav-link\">\r\n                <a href='https://www.matthewcotton.dev/#/projects'>Back to Portfolio</a>\r\n              </Navbar.Text>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box textAlign=\"center\">\r\n          <Typography variant=\"h3\">7 Day Weather Forecast</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box textAlign=\"center\">\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            {props.loadingStatus}\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction LocationBlock(props) {\r\n  const classes = useStyles();\r\n\r\n  //Data Manipulation\r\n  const address = props.locationData.formatted;\r\n  // const hamlet = props.locationData.components.hamlet;\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper} elevation={3}>\r\n            <Box textAlign=\"left\">\r\n              <Typography>Current Location:{\" \" + address }</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper} elevation={3}>\r\n            <Box textAlign=\"left\">\r\n              <Typography>Search:{\" \"}</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBlock;\r\n","import React from \"react\";\nimport { WeatherApiClient } from \"./WeatherApiClient\";\nimport { GeoApiClient } from \"./GeoApiClient\";\nimport SevenDayCards from \"./SevenDayCards\";\nimport MyNav from \"./MyNav\";\nimport Title from \"./Title\";\nimport LocationBlock from \"./LocationBlock\";\nimport \"./App.css\";\nimport \"fontsource-roboto\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: [],\n      loading: \"\",\n      fetching: false, // Remove if I don't use this variable\n      location: [],\n    };\n    this.weatherApiClient = new WeatherApiClient();\n    this.geoApiClient = new GeoApiClient();\n  }\n\n  fetchLocation() {\n    this.geoApiClient\n    .getGeoRev()\n    .then((response) => this.updateLocation(response.data.results[0]))\n  }\n\n  updateLocation(location) {\n    this.setState({\n      location,\n    })\n  }\n\n  fetchWeather() {\n    this.setState({\n      loading: \"loading...\",\n      fetching: true,\n    });\n\n    this.weatherApiClient\n      .getWeather()\n      .then((response) => this.updateWeather(response.data.daily))\n      .finally(() => {\n        this.setState({\n          loading: \"\",\n          fetching: false,\n        });\n      });\n  }\n\n  updateWeather(weather) {\n    this.setState({\n      weather,\n    });\n  }\n\n  componentDidMount() {\n    this.fetchWeather();\n    this.fetchLocation();\n  }\n\n  render() {\n    console.log(this.state.location);\n    return (\n      <div className=\"App\">\n        <MyNav />\n        <br />\n        <Title loadingStatus={this.state.loading} />\n        <LocationBlock locationData={this.state.location} />\n        <SevenDayCards weatherData={this.state.weather} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}