{"version":3,"sources":["apiKeyOpenWeatherMap.js","WeatherApiClient.js","apiKeyGeo.js","GeoApiClient.js","weatherDataProcessing.js","NewCard.js","SevenDayCards.js","MyNav.js","Title.js","LocationBlock.js","App.js","reportWebVitals.js","index.js"],"names":["apiKeyOpenWeatherMap","WeatherApiClient","response","status","Promise","resolve","reject","Error","statusText","url","axios","get","then","this","catch","error","console","alert","lat","long","getRequest","apiKeyGeo","GeoApiClient","lon","placename","weatherDataProcessing","weatherData","days","months","today","Date","now","todayName","getDay","weatherInfo","slice","map","item","i","key","day","parseInt","dt","nameDay","monthDate","getMonth","getDate","icon","weather","description","toUpperCase","length","maxTemp","Math","round","temp","max","minTemp","min","windSpeed","wind_speed","windDirRot","String","wind_deg","push","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","NewCard","props","classes","Grid","xs","sm","md","lg","xl","Paper","className","elevation","container","direction","alignItems","Typography","variant","gutterBottom","dayName","detailedDesc","justify","src","alt","style","transform","windDir","root","flexGrow","NewWeatherCard","MyNav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Text","href","React","Component","Title","Box","loadingStatus","form","margin","width","LocationBlock","useState","setPlacename","noValidate","autoComplete","onSubmit","e","preventDefault","onsubmit","TextField","label","type","value","onChange","target","Button","locationData","formatted","App","state","loading","weatherApiClient","geoApiClient","toastr","options","closeButton","positionClass","timeOut","extendedTimeOut","showEasing","clear","setState","getGeoFwd","data","results","updateLocation","finally","fetchWeather","geometry","lng","getWeather","updateWeather","daily","searchLocation","SevenDayCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44923297.chunk.js","sourcesContent":["function apiKeyOpenWeatherMap() {\r\n  return \"0a946960ed9c8a758bd296209b592532\";\r\n}\r\n\r\nexport default apiKeyOpenWeatherMap;","import axios from \"axios\";\r\nimport apiKeyOpenWeatherMap from \"./apiKeyOpenWeatherMap\";\r\n\r\nexport class WeatherApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getWeather(lat, long) {\r\n    let exclude = \"minutely,hourly,alerts\";\r\n    return this.getRequest(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=${exclude}&units=metric&appid=${apiKeyOpenWeatherMap()}`\r\n    );\r\n  }\r\n}\r\n","function apiKeyGeo() {\r\n  return \"3234ac1ece074372ae5030d3e2fdc5ee\";\r\n}\r\n\r\nexport default apiKeyGeo;","import axios from \"axios\";\r\nimport apiKeyGeo from \"./apiKeyGeo\";\r\n\r\nexport class GeoApiClient {\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  getGeoRev(lat, lon) {\r\n    return this.getRequest(\r\n      `https://api.opencagedata.com/geocode/v1/json?q=${lat},${lon}&key=${apiKeyGeo()}`\r\n    );\r\n  }\r\n\r\n  getGeoFwd(placename) {\r\n    return this.getRequest(\r\n      `https://api.opencagedata.com/geocode/v1/json?q=${placename}&key=${apiKeyGeo()}`\r\n    );\r\n  }\r\n}\r\n","export function weatherDataProcessing(weatherData) {\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"Febuary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const today = new Date(Date.now());\r\n  const todayName = days[today.getDay(today)];\r\n  let weatherInfo = [];\r\n\r\n  weatherData.slice(0, 7).map((item, i) => {\r\n    // Set key\r\n    const key = i;\r\n    // Calculate name of the day\r\n    const day = new Date(parseInt(item.dt) * 1000);\r\n    let nameDay = days[day.getDay(day)];\r\n    nameDay = nameDay === todayName ? \"Today\" : nameDay;\r\n    // Calculate name of the month and date\r\n    const month = months[day.getMonth(day)];\r\n    const date = day.getDate(day);\r\n    const monthDate = month + \" \" + date;\r\n    // Set icon link\r\n    const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`;\r\n    // Set description\r\n    const description =\r\n      item.weather[0].description[0].toUpperCase() +\r\n      item.weather[0].description.slice(1, item.weather[0].description.length);\r\n    // Set max and min temps\r\n    const maxTemp = Math.round(item.temp.max) + \"°C\";\r\n    const minTemp = Math.round(item.temp.min) + \"°C\";\r\n    // Set wind speed and wind direction\r\n    const windSpeed = Math.round(item.wind_speed * 10) / 10 + \"m/s\";\r\n    const windDirRot = String(\"rotate(\" + item.wind_deg + \"deg)\");\r\n    weatherInfo.push({\r\n      key,\r\n      nameDay,\r\n      monthDate,\r\n      icon,\r\n      description,\r\n      maxTemp,\r\n      minTemp,\r\n      windSpeed,\r\n      windDirRot,\r\n    });\r\n  });\r\n\r\n  return weatherInfo;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction NewCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={11} sm={6} md={4} lg={3} xl={2}>\r\n      <Paper className={classes.paper} elevation={5}>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item xs>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {props.dayName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {props.monthDate}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.detailedDesc}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container justify=\"center\">\r\n            <Grid item xs={8}>\r\n              <img\r\n                className=\"weather-icon\"\r\n                src={props.icon}\r\n                alt={\"Icon for \" + props.detailedDesc}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Min Temp\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.minTemp}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Max Temp\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.maxTemp}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} container>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Wind Speed\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {props.windSpeed}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6} container direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Wind Direction\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"caption\" gutterBottom>\r\n                N\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <NavigationIcon style={{ transform: props.windDir }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NewCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NewCard from \"./NewCard\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction NewWeatherCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {props.weatherInfo.map((day) => (\r\n          <NewCard\r\n            key={day.key}\r\n            dayName={day.nameDay}\r\n            monthDate={day.monthDate}\r\n            icon={day.icon}\r\n            detailedDesc={day.description}\r\n            maxTemp={day.maxTemp}\r\n            minTemp={day.minTemp}\r\n            windSpeed={day.windSpeed}\r\n            windDir={day.windDirRot}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWeatherCard;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand>Weather App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            </Nav>\r\n            <Nav>\r\n            <Navbar.Text className=\"nav-link\">\r\n                <a href='https://www.matthewcotton.dev/#/projects'>Back to Portfolio</a>\r\n              </Navbar.Text>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Title(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box className={classes.paper}>\r\n          <Typography variant=\"h3\">7 Day Weather Forecast</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box className={classes.paper}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            {props.loadingStatus}\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  form: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LocationBlock(props) {\r\n  const classes = useStyles();\r\n\r\n  const [placename, setPlacename] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onsubmit(placename);\r\n    setPlacename(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ padding: 15 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Box textAlign=\"center\">\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <TextField\r\n                id=\"location-search\"\r\n                label=\"Search\"\r\n                type=\"search\"\r\n                value={placename}\r\n                onChange={(e) => setPlacename(e.target.value)}\r\n              />\r\n              <Button variant=\"outlined\" type=\"submit\" value=\"Submit\">\r\n                Search\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box textAlign=\"left\">\r\n            <Typography className={classes.paper}>\r\n              Current Location:{\" \" + props.locationData.formatted}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBlock;\r\n","import React from \"react\";\nimport { WeatherApiClient } from \"./WeatherApiClient\";\nimport { GeoApiClient } from \"./GeoApiClient\";\nimport { weatherDataProcessing } from \"./weatherDataProcessing\";\nimport SevenDayCards from \"./SevenDayCards\";\nimport MyNav from \"./MyNav\";\nimport Title from \"./Title\";\nimport LocationBlock from \"./LocationBlock\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./App.css\";\nimport \"fontsource-roboto\";\nimport toastr from \"toastr\";\nimport \"toastr/build/toastr.min.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: [],\n      weatherInfo: [],\n      locationData: [],\n      loading: \"\",\n      placename: \"Leeds\", // Default is Leeds city centre\n    };\n    this.weatherApiClient = new WeatherApiClient();\n    this.geoApiClient = new GeoApiClient();\n    toastr.options = {\n      closeButton: true,\n      positionClass: \"toast-top-center\",\n      timeOut: \"3000\",\n      extendedTimeOut: \"1000\",\n      showEasing: \"swing\",\n    };\n    toastr.clear();\n  }\n\n  searchLocation(placename) {\n    this.setState({\n      loading: \"loading...\",\n    });\n\n    this.geoApiClient\n      .getGeoFwd(placename)\n      .then((response) =>\n        response.data.results[0]\n          ? this.updateLocation(response.data.results[0])\n          : toastr.error(\n              `Location ${placename} could not be found`,\n              \"No Search Results\"\n            )\n      )\n      .finally(() => {\n        this.setState({\n          loading: \"\",\n        });\n      });\n  }\n\n  updateLocation(response) {\n    this.setState({\n      locationData: response,\n    });\n    this.fetchWeather(response.geometry.lat, response.geometry.lng);\n  }\n\n  fetchWeather(lat, long) {\n    this.weatherApiClient\n      .getWeather(lat, long)\n      .then((response) => this.updateWeather(response.data.daily));\n  }\n\n  updateWeather(weatherData) {\n    this.setState({\n      weatherData,\n      weatherInfo: weatherDataProcessing(weatherData),\n    });\n  }\n\n  componentDidMount() {\n    this.searchLocation(this.state.placename);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MyNav />\n        <br />\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Title loadingStatus={this.state.loading} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <LocationBlock\n              locationData={this.state.locationData}\n              onsubmit={(placename) => this.searchLocation(placename)}\n            />\n          </Grid>\n        </Grid>\n        <SevenDayCards weatherInfo={this.state.weatherInfo} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}